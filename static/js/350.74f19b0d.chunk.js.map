{"version":3,"file":"static/js/350.74f19b0d.chunk.js","mappings":"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","sources":["Services/SearchDataApi.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.js"],"sourcesContent":["function fetchData(base_URL, errorMassage) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MWQ5Y2Y2YTlkOWIzNThkNTE2MDY4NGE3NWRlMTg0NiIsInN1YiI6IjY1MTBiMmU2M2E0YTEyMDBjNWFhNjAxZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c4yYt4p0SuZDxRBn3LGch8hpfAZK22HJzxSkBR3CMgk',\n    },\n  };\n\n  return fetch(base_URL, options)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      console.log(\"ERROR\")\n      return Promise.reject(new Error(errorMassage));\n    })\n}\n\nconst api = {\n  fetchData,\n};\n\nexport default api;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  color: #212121;\n  margin-top: 50px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  font-size: 16px;\n  color: #0f6cf8;\n\n  &.active,\n  &:hover,\n  &:focus {\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  padding-top: 6px;\n  padding-bottom: 6px;\n`;\n\nexport const MoviePoster = styled.img`\n  margin-left: 6px;\n  width: 270px;\n  height: auto;\n`;\n\nexport const MovieInfoDetail = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n","// import { useLocation } from 'react-router-dom';\nimport {\n  MovieInfoContainer,\n  MoviePoster,\n  MovieInfoDetail,\n  BackLink,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, poster, genres, backLincLocation }) => {\nconst {title, name} = movie;\n\n  return (\n    <>\n      <BackLink to={backLincLocation?.current ?? '/'}>Go back</BackLink>\n\n      <MovieInfoContainer>\n        <div>\n          <MoviePoster alt={title} src={poster} />\n        </div>\n        <MovieInfoDetail>\n          <h1>\n            {title ? title : name}{' '}\n            {movie.release_date ? `(${movie.release_date.slice(0, 4)})` : ''}\n          </h1>\n          <p>Popularity: {movie.popularity}</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </MovieInfoDetail>\n      </MovieInfoContainer>\n    </>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  border-top: 4px solid #c9cacc;\n  border-bottom: 4px solid #c9cacc;\n`;\n\n\nexport const AddInfo = styled.h2`\n  margin-left: 6px;\n  font-size: 16px;\n`;\n\nexport const ListItem = styled.li`\n  text-decoration: none;\n  margin-right: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #212121;\n  /* text-decoration: none; */\n  font-size: 16px;\n  color: #0f6cf8;\n\n  &.active,\n  &:hover,\n  &:focus {\n    /* font-size: 18px; */\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`;\n","import {\n  Outlet,\n  useParams,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport MovieInfo from 'components/MovieInfo';\nimport { InfoBox, ListItem, StyledLink, AddInfo } from './MovieDetails.styled';\nimport Loader from 'components/Loader';\nimport API from 'Services/SearchDataApi.js';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [poster, setPoster] = useState('');\n  const [genres, setGenres] = useState('');\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  const [searchParams] = useSearchParams();\n  const title = searchParams.get('title') ?? '';\n\n  const location = useLocation();\n  const backLincLocation = useRef(location.state?.from ?? '/movies');\n\n  const base_URL = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n  const errorMassage = `Movie ${title} was not found`;\n\n  useEffect(() => {\n    if (isFirstLoad) {\n      setIsFirstLoad(false);\n      return;\n    }\n    API.fetchData(base_URL, errorMassage)\n      .then(response => {\n        setMovie(response);\n        setPoster(`https://image.tmdb.org/t/p/w500/${response.poster_path}`);\n        setGenres(() => response.genres.map(({ name }) => name).join(', '));\n        setStatus(Status.RESOLVED);\n      })\n      .catch(err => {\n        setMovie({});\n        setError(errorMassage);\n        setStatus(Status.REJECTED);\n      });\n  }, [base_URL, errorMassage, isFirstLoad]);\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <MovieInfo\n          movie={movie}\n          poster={poster}\n          genres={genres}\n          backLincLocation={backLincLocation}\n        />\n        <InfoBox>\n          <AddInfo>Additional information</AddInfo>\n          <ul>\n            <ListItem>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </ListItem>\n            <ListItem>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </ListItem>\n          </ul>\n        </InfoBox>\n        <Suspense fallback={<Loader/>}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  }\n  if (status === 'rejected') {\n    return <h1>{error}</h1>;\n  }\n};\n\nexport default MovieDetails;\n"],"names":["api","fetchData","base_URL","errorMassage","fetch","method","headers","accept","Authorization","then","response","ok","json","console","log","Promise","reject","Error","BackLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieInfoContainer","_templateObject2","MoviePoster","_templateObject3","MovieInfoDetail","_templateObject4","_ref","_backLincLocation$cur","movie","poster","genres","backLincLocation","title","name","_jsxs","_Fragment","children","_jsx","to","current","alt","src","release_date","concat","slice","popularity","overview","InfoBox","AddInfo","ListItem","StyledLink","Status","_searchParams$get","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","setPoster","_useState5","_useState6","setGenres","_useState7","_useState8","isFirstLoad","setIsFirstLoad","_useState9","_useState10","status","setStatus","_useState11","_useState12","error","setError","id","useParams","_useSearchParams","useSearchParams","get","location","useLocation","useRef","state","from","useEffect","API","poster_path","map","join","catch","err","MovieInfo","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}
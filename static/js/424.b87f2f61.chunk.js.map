{"version":3,"file":"static/js/424.b87f2f61.chunk.js","mappings":"qIAoBA,IAAMA,EAAM,CACVC,UArBF,SAAmBC,EAAUC,GAU3B,OAAOC,MAAMF,EATG,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAKHC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,QAElBC,QAAQC,IAAI,SACLC,QAAQC,OAAO,IAAIC,MAAMd,IAClC,GACJ,GAMA,K,2HCtBae,E,QAAiBC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gC,SCGjCC,EACE,OADFA,EAGM,WAHNA,EAIM,WAuDZ,EApDqB,WACnB,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA4BT,EAAAA,EAAAA,UAASF,GAAYY,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0Bb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAOC,EAAAA,EAAAA,MAAPD,GAEFvC,EAAQ,sCAAAyC,OAAyCF,EAAE,kCACnDtC,EAAY,kCAyBlB,OAvBAyC,EAAAA,EAAAA,YAAU,WACJb,EACFC,GAAe,GAGjBa,EAAAA,EAAAA,UAAc3C,EAAUC,GACrBM,MAAK,SAAAC,GACJ,GAAgC,IAA5BA,EAASoC,QAAQC,OAInB,OAHAnB,EAAgB,IAChBY,EAASrC,QACTiC,EAAUd,GAGZM,EAAgBlB,EAASoC,SACzBV,EAAUd,EACZ,IACC0B,OAAM,SAAAC,GACLrB,EAAgB,IAChBY,EAASrC,GACTiC,EAAUd,EACZ,GACJ,GAAG,CAACpB,EAAUC,EAAc4B,IAEb,aAAXI,GAEAe,EAAAA,EAAAA,KAAChC,EAAc,CAAAiC,SACZxB,EAAayB,KAAI,SAAAC,GAA8B,IAA3BZ,EAAEY,EAAFZ,GAAIa,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAC/B,OACEC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,WAASG,MACbJ,EAAAA,EAAAA,KAAA,KAAAC,SAAII,MAFGd,EAKb,MAIS,aAAXN,GACKe,EAAAA,EAAAA,KAAA,MAAAC,SAAKZ,SADd,CAGF,C","sources":["Services/SearchDataApi.js","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["function fetchData(base_URL, errorMassage) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MWQ5Y2Y2YTlkOWIzNThkNTE2MDY4NGE3NWRlMTg0NiIsInN1YiI6IjY1MTBiMmU2M2E0YTEyMDBjNWFhNjAxZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c4yYt4p0SuZDxRBn3LGch8hpfAZK22HJzxSkBR3CMgk',\n    },\n  };\n\n  return fetch(base_URL, options)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      console.log(\"ERROR\")\n      return Promise.reject(new Error(errorMassage));\n    })\n}\n\nconst api = {\n  fetchData,\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const ReviewsGallery = styled.ul`\n  padding-top: 10px;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport API from 'Services/SearchDataApi.js';\nimport { ReviewsGallery } from './MovieReviews.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieReviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n\n  const base_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`;\n  const errorMassage = `Reviews for movie was not found`;\n\n  useEffect(() => {\n    if (isFirstLoad) {\n      setIsFirstLoad(false);\n      return;\n    }\n    API.fetchData(base_URL, errorMassage)\n      .then(response => {\n        if (response.results.length === 0) {\n          setMovieReviews([]);\n          setError(errorMassage);\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovieReviews(response.results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(err => {\n        setMovieReviews([]);\n        setError(errorMassage);\n        setStatus(Status.REJECTED);\n      });\n  }, [base_URL, errorMassage, isFirstLoad]);\n\n  if (status === 'resolved') {\n    return (\n      <ReviewsGallery>\n        {movieReviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ReviewsGallery>\n    );\n  }\n  if (status === 'rejected') {\n    return <h1>{error}</h1>;\n  }\n};\n\nexport default MovieReviews;\n"],"names":["api","fetchData","base_URL","errorMassage","fetch","method","headers","accept","Authorization","then","response","ok","json","console","log","Promise","reject","Error","ReviewsGallery","styled","_templateObject","_taggedTemplateLiteral","Status","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","_useState3","_useState4","isFirstLoad","setIsFirstLoad","_useState5","_useState6","status","setStatus","_useState7","_useState8","error","setError","id","useParams","concat","useEffect","API","results","length","catch","err","_jsx","children","map","_ref","author","content","_jsxs"],"sourceRoot":""}